#
# Copyright (c) 2007 - 2016 Manos Batsis
#
# This file is part of Calipso, a software platform by www.Abiss.gr.
#
# Calipso is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Calipso is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Calipso. If not, see http://www.gnu.org/licenses/agpl.html
#
#
# Do you want to encrypt passwords in your .properties files? Try JASYPT.
# Encrypting configuration: http://www.jasypt.org/encrypting-configuration.html
# Integrating with Spring 3: http://www.jasypt.org/spring3.html
#
#
restdude.appName=${buildfilters.restdude.appName}
restdude.api.basePath=/api/rest
restdude.api.defaultParentPath=
restdude.api.prepend.excludes=/api/rest, /api/auth, /apiauth, /ws, /app, /queue, /topic
restdude.contextPath=/restdude
restdude.appVersion=${project.version}
restdude.initData=${buildfilters.restdude.initData}
restdude.registration.forceCodes=false
restdude.contact.name=Manos Batsis
restdude.contact.url=https://manosbatsis.github.io
restdude.contact.email=
restdude.license.name=LGPLv3
restdude.license.url=https://www.gnu.org/licenses/lgpl-3.0.en.html
restdude.cookies.httpOnly=${buildfilters.restdude.cookies.httpOnly}
restdude.cookies.secure=${buildfilters.restdude.cookies.secure}
restdude.site.default=${buildfilters.restdude.site.default}
restdude.validator.classes.exclude=com.restdude.domain.error.model.SystemError, com.restdude.domain.error.model.ErrorLog

restdude.jwt.accessTokenMinutes=10
restdude.jwt.refreshTokenMinutes=50
restdude.jwt.tokenIssuer=Restdude
restdude.jwt.tokenSigningKey=foobar

github.clientId=${buildfilters.github.clientId}
github.clientSecret=${buildfilters.github.clientSecret}
facebook.clientId=${buildfilters.facebook.clientId}
facebook.clientSecret=${buildfilters.facebook.clientSecret}
twitter.consumerKey=${buildfilters.twitter.consumerKey}
twitter.consumerSecret=${buildfilters.twitter.consumerSecret}
linkedin.consumerKey=${buildfilters.linkedin.consumerKey}
linkedin.consumerSecret=${buildfilters.linkedin.consumerSecret}
google.consumerKey=${buildfilters.google.consumerKey}
google.consumerSecret=${buildfilters.google.consumerSecret}
# Default email prperties are set in maven parent priject's dev.properties
restdude.baseurl=http://localhost:8080/restdude
restdude.testEmailDomain=restdude.com
mail.enabled=${buildfilters.mail.enabled}
mail.test.enable=${buildfilters.mail.test.enable}
mail.test.user=${buildfilters.mail.test.user}
mail.server.host=${buildfilters.mail.server.host}
mail.server.port=${buildfilters.mail.server.port}
mail.server.protocol=${buildfilters.mail.server.protocol}
mail.server.from=${buildfilters.mail.server.from}
mail.server.username=${buildfilters.mail.server.username}
mail.server.password=${buildfilters.mail.server.password}
# JDBC Datasource
restdude.ds.driverClass=${buildfilters.dataSource.driverClassName}
restdude.ds.jdbcUrl=${buildfilters.dataSource.url}
restdude.ds.username=${buildfilters.dataSource.username}
restdude.ds.password=${buildfilters.dataSource.password}
# JPA/Hibernate # restdude
restdude.persistenceUnit.packagesToScan=**.restdude, **.restdude
restdude.hibernate.dialect=${buildfilters.hibernate.dialect}
restdude.hibernate.show_sql=${buildfilters.hibernate.show_sql}
restdude.hibernate.format_sql=${buildfilters.hibernate.format_sql}
restdude.hibernate.hbm2ddl.auto=${buildfilters.hibernate.hbm2ddl.auto}
restdude.hibernate.cache.use_second_level_cache=${buildfilters.hibernate.cache.use_second_level_cache}
restdude.hibernate.cache.provider_class=${buildfilters.hibernate.cache.provider_class}
restdude.hibernate.id.new_generator_mappings=${buildfilters.hibernate.id.new_generator_mappings}
# file service impl
fs.filePersistenceService=${buildfilters.fs.filePersistenceService}
# AWS S3
aws_access_key_id=${buildfilters.aws_access_key_id}
aws_secret_access_key=${buildfilters.aws_secret_access_key}
aws_namecard_bucket=${buildfilters.aws_namecard_bucket}


# prefix spring actuator controller paths
management.context-path=/api/management
management.info.git.mode=full
management.security.roles=ADMIN
endpoints.actuator.enabled=true
endpoints.actuator.path=/api/management
endpoints.actuator.env.path=/api/management/env
endpoints.actuator.info.enabled=true
endpoints.actuator.info.path=/api/management/info
endpoints.actuator.metrics.enabled=true
endpoints.actuator.metrics.path=/api/management/metrics
endpoints.actuator.health.enabled=true
endpoints.actuator.health.path=/api/management/health
endpoints.actuator.websocket.path=/api/management/websocket
endpoints.actuator.websocket-mappings.path=/api/management/websocket-mappings
# GIT info
info.app.encoding=${project.build.sourceEncoding}
info.app.java.source=${maven.compiler.source}
info.app.java.target=${maven.compiler.target}
info.git.tags=${git.tags}
info.git.branch=${git.branch}
info.git.dirty=${git.dirty}
info.git.remote.origin.url=${git.remote.origin.url}
info.git.commit.id=${git.commit.id}
info.git.commit.id.abbrev=${git.commit.id.abbrev}
info.git.commit.id.describe=${git.commit.id.describe}
info.git.commit.id.describe-short=${git.commit.id.describe-short}
info.git.commit.user.name=${git.commit.user.name}
info.git.commit.user.email=${git.commit.user.email}
info.git.commit.message.full=${git.commit.message.full}
info.git.commit.message.short=${git.commit.message.short}
info.git.commit.time=${git.commit.time}
info.git.closest.tag.name=${git.closest.tag.name}
info.git.closest.tag.commit.count=${git.closest.tag.commit.count}
info.git.build.user.name=${git.build.user.name}
info.git.build.user.email=${git.build.user.email}
info.git.build.time=${git.build.time}
info.git.build.host=${git.build.host}
info.git.build.version=${git.build.version}