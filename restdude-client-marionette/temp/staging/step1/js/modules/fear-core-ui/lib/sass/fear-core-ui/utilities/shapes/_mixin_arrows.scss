/// Create arrows mixin, based on the CSS version (link provided).
/// @author kymbee
/// @param {string} $size - ie, 5px
/// @param {string} $direction - ie, up | down | left | right
/// @param {string} $position - ie, top | bottom | left | right
/// @param {string} $color - ie, $color__brand--green
/// @example @include create-arrow(5px, up, right, $color__brand--green);
/// @link www.cssarrowplease.com
@mixin create-arrow($size, $direction, $position, $color) {

  $opposite: '';
  $vertical: 'top';
  $horizontal: 'left';
  $verticalVal: '';
  $horizontalVal: '';
  $margin: '';

  @if $direction == 'up' {
    $direction: 'bottom';
  } @else if $direction == 'down' {
    $direction: 'top';
  } @else if $direction == 'left' {
    $direction: 'right';
  } @else if $direction == 'right' {
    $direction: 'left';
  }

  @if $position == 'top' {
    $vertical: 'bottom';
    $opposite: 'bottom';
    $verticalVal: 100%;
    $horizontalVal: 50%;
    $margin: 'left';
  } @else if $position == 'bottom' {
    $opposite: 'top';
    $verticalVal: 100%;
    $horizontalVal: 50%;
    $margin: 'left';
  } @else if $position == 'left' {
    $horizontal: 'right';
    $opposite: 'right';
    $verticalVal: 50%;
    $horizontalVal: 100%;
    $margin: 'top';
  } @else if $position == 'right' {
    $opposite: 'left';
    $verticalVal: 50%;
    $horizontalVal: 100%;
    $margin: 'top';
  }

  position: relative;

  &::after {
    #{$vertical}: $verticalVal;
    #{$horizontal}: $horizontalVal;
    border: solid transparent;
    content: ' ';
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    border-#{$direction}-color: $color;
    border-width: $size;
    margin-#{$margin}: -#{$size};
  }
}
